<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="sebin" name="kuplrg.Spec" tests="109" errors="0" failures="0" skipped="0" time="0.961" timestamp="2025-10-13T02:05:48">
          <properties>
      <property name="java.specification.version" value="21"/><property name="sun.cpu.isalist" value="amd64"/><property name="sun.jnu.encoding" value="MS949"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://adoptium.net/"/><property name="sun.boot.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-21.0.8.9-hotspot\bin"/><property name="sun.java.command" value="xsbt.boot.Boot"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2025-07-15"/><property name="java.home" value="C:\Program Files\Eclipse Adoptium\jdk-21.0.8.9-hotspot"/><property name="file.separator" value="\"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="user.script" value=""/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="21.0.8+9-LTS"/><property name="user.name" value="sebin"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="C:\Users\sebin\AppData\Local\Temp\jna-109311349\jna9928721561324487074.dll"/><property name="java.vendor.version" value="Temurin-21.0.8+9"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="C:\Users\sebin\AppData\Local\Temp\"/><property name="java.version" value="21.0.8"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="sun.os.patch.level" value=""/><property name="native.encoding" value="MS949"/><property name="java.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-21.0.8.9-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\sebin\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\sebin\AppData\Local\Programs\Python\Python313\;C:\Program Files\Eclipse Adoptium\jdk-21.0.8.9-hotspot\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\mingw64\bin;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Users\sebin\AppData\Local\Microsoft\WindowsApps;C:\Users\sebin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2025.1.4.1\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Users\sebin\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\sebin\AppData\Roaming\npm;C:\Users\sebin\AppData\Local\Coursier\data\bin;C:\Program Files\sbt-1.11.5\sbt\bin;C:\Program Files\PostgreSQL\17\bin;;."/><property name="stderr.encoding" value="ms949"/><property name="java.vendor" value="Eclipse Adoptium"/><property name="scala.ext.dirs" value="C:\Users\sebin\.sbt\1.0\java9-rt-ext-eclipse_adoptium_21_0_8"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="C:\Users\sebin\AppData\Local\Coursier\cache\arc\https\github.com\sbt\sbt\releases\download\v1.11.5\sbt-1.11.5.zip\sbt\bin\sbt-launch.jar"/><property name="java.vm.vendor" value="Eclipse Adoptium"/><property name="user.variant" value=""/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Asia/Seoul"/><property name="java.vm.specification.version" value="21"/><property name="os.name" value="Windows 11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="KR"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="C:\Users\sebin"/><property name="user.language" value="ko"/><property name="sbt.ipcsocket.tmpdir" value="C:\Users\sebin\AppData\Local\Temp\.sbtcf1c7f67\ipcsocket"/><property name="swoval.tmpdir" value="C:\Users\sebin\AppData\Local\Temp\.sbtcf1c7f67\swoval"/><property name="jline.esc.timeout" value="0"/><property name="stdout.encoding" value="ms949"/><property name="path.separator" value=";"/><property name="os.version" value="10.0"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/><property name="user.dir" value="D:\coding\COSE212-plrg-hw\hw2-mini-fsharp"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="21.0.8+9-LTS"/><property name="java.class.version" value="65.0"/>
    </properties>
          <testcase classname="kuplrg.Spec" name="eval(&quot;42&quot;) should be &quot;42&quot;" time="0.122">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true&quot;) should be &quot;true&quot;" time="0.005">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;false&quot;) should be &quot;false&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;x&quot;) should throw an error with a message &quot;free identifier&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;-(-42)&quot;) should be &quot;42&quot;" time="0.005">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 + 2&quot;) should be &quot;3&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;19 - 2&quot;) should be &quot;17&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;2 * 3&quot;) should be &quot;6&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;15 / 2&quot;) should be &quot;7&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;3 / 0&quot;) should throw an error with a message &quot;invalid operation&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;15 % -4&quot;) should be &quot;3&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;3 % 0&quot;) should throw an error with a message &quot;invalid operation&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;!true&quot;) should be &quot;false&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;!false&quot;) should be &quot;true&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true &amp;&amp; true&quot;) should be &quot;true&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true &amp;&amp; false&quot;) should be &quot;false&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;false &amp;&amp; true&quot;) should be &quot;false&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;false &amp;&amp; false&quot;) should be &quot;false&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true || true&quot;) should be &quot;true&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true || false&quot;) should be &quot;true&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;false || true&quot;) should be &quot;true&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;false || false&quot;) should be &quot;false&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 = 1&quot;) should be &quot;true&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 = 2&quot;) should be &quot;false&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 &lt;&gt; 1&quot;) should be &quot;false&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true = 1&quot;) should be &quot;false&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true = true&quot;) should be &quot;true&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;true = false&quot;) should be &quot;false&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;[] = []&quot;) should be &quot;true&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;[] = (1 :: [])&quot;) should be &quot;false&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(2 :: []) = []&quot;) should be &quot;false&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 :: 2&quot;) should throw an error with a message &quot;not a list&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;[1; 2; 3] = 1 :: 2 :: 3 :: []&quot;) should be &quot;true&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(1, 2, true) = (1, 2, true)&quot;) should be &quot;true&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(fun x -&gt; x + 1) &lt;&gt; 42&quot;) should be &quot;true&quot;" time="0.011">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(fun x -&gt; x + 1) = (fun x -&gt; x + 1)&quot;) should be &quot;false&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(1, fun x -&gt; x) = (1, fun x -&gt; x)&quot;) should be &quot;false&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;[1; 2; (fun x -&gt; x); 5] = [1; 2; (fun x -&gt; x); 5]&quot;) should be &quot;false&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(fun x -&gt; x) :: [] = (fun x -&gt; x) :: []&quot;) should be &quot;false&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(1, 2, 3) &lt;&gt; [1; 2; 3]&quot;) should be &quot;true&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 &lt; 2&quot;) should be &quot;true&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;2 &gt;= 5&quot;) should be &quot;false&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 &lt;= 1&quot;) should be &quot;true&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 &gt; 1&quot;) should be &quot;false&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 &lt; true&quot;) should throw an error with a message &quot;invalid operation&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;if 3 &lt; 5 then 10 else 20&quot;) should be &quot;10&quot;" time="0.006">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;if 3 &gt; 5 then 10 else 20&quot;) should be &quot;20&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;if 3 &lt; 5 then 10 else 1 + true&quot;) should be &quot;10&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;if 3 &gt; 5 then 1 + true else 20&quot;) should be &quot;20&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;if 3 then 10 else 20&quot;) should throw an error with a message &quot;not a boolean&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;[]&quot;) should be &quot;[]&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;1 :: 2 :: 3 :: []&quot;) should be &quot;[1; 2; 3]&quot;" time="0.007">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;[4; 2; 3]&quot;) should be &quot;[4; 2; 3]&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let x = 42 in x + 1&quot;) should be &quot;43&quot;" time="0.007">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let x = 1 in let y = 2 in x + y&quot;) should be &quot;3&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let (x, y) = (1, 2) in x + y&quot;) should be &quot;3&quot;" time="0.008">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let (x, y, z) = 42 in x&quot;) should throw an error with a message &quot;invalid pattern match&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let (1, y) = (1, 2) in y&quot;) should be &quot;2&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let (1, y) = (2, 3) in y&quot;) should throw an error with a message &quot;invalid pattern match&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let h :: _ = [1; 2; 3] in h&quot;) should be &quot;1&quot;" time="0.007">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let [x; y] = [1; 2] in x + y&quot;) should be &quot;3&quot;" time="0.007">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let [x; y] = [1; 2; 3] in x + y&quot;) should throw an error with a message &quot;invalid pattern match&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(let x = 1 in x) + (let y = 2 in y)&quot;) should be &quot;3&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(let x = 42 in x + 1) + x&quot;) should throw an error with a message &quot;free identifier&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;fun x -&gt; x + 1&quot;) should be &quot;&lt;function&gt;&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;fun () -&gt; x&quot;) should be &quot;&lt;function&gt;&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;(fun x -&gt; x + 2) 3&quot;) should be &quot;5&quot;" time="0.006">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let addN n m = n + m in let add3 = addN 3 in add3 4&quot;) should be &quot;7&quot;" time="0.005">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let g = fun () -&gt; 1 + 2 in g ()&quot;) should be &quot;3&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f = fun (a, b, c) -&gt; a + b + c in f (1, 2, 3)&quot;) should be &quot;6&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let x = 42 in let f = fun y -&gt; x + y in let x = 3 in f 1&quot;) should be &quot;43&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;42 true&quot;) should throw an error with a message &quot;not a function&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let rec f x y = x + y in f 1&quot;) should be &quot;&lt;function&gt;&quot;" time="0.019">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let rec g y = f (y + 1) and f x = x * 2 in g 3&quot;) should be &quot;8&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f x = match x with | 0 -&gt; 0 | _ -&gt; 1 in f 0&quot;) should be &quot;0&quot;" time="0.017">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f x = match x with | 0 -&gt; 0 | _ -&gt; 1 in f 42&quot;) should be &quot;1&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f x = match x with | 0 -&gt; 0 | _ -&gt; 1 in f true&quot;) should be &quot;1&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f x = match x with | 0 -&gt; 0 | _ -&gt; y in f 0&quot;) should be &quot;0&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f x = match x with | 0 -&gt; 0 | 0 -&gt; 1 in f 0&quot;) should be &quot;0&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f x = match x with | 0 -&gt; 0 in f 42&quot;) should throw an error with a message &quot;unmatched value&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f x = match x with | true -&gt; -1 in f 0&quot;) should throw an error with a message &quot;unmatched value&quot;" time="0.006">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let f opt = match opt with | None -&gt; 0 | Some x -&gt; x in f (Some  ... should be &quot;42&quot;" time="0.013">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let rec sum x = if x &lt; 1 then 0 else x + sum (x - 1) in sum 10&quot;) should be &quot;55&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;let rec mod(x, y) = if x &lt; y then x else mod(x-y, y) in mod(42,  ... should be &quot;2&quot;" time="0.002">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;\r\n    let rec len l =\r\n      match l with \r\n      | [] -&gt;  ... should be &quot;3&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;\r\n      let rec len l =\r\n        match l with \r\n        |  ... should be &quot;3&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;\r\n      let rec alternate l1 l2 =\r\n        match l1, l2 with ... should be &quot;[1; 4; 2; 5; 3; 6]&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(&quot;\r\n      let rec flatten l =\r\n        let rec aux l1 l2 =\r\n ... should be &quot;[1; [2; 3]; 4; 5; 6]&quot;" time="0.005">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr1) should be &quot;36&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr2) should be &quot;3628800&quot;" time="0.001">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr3) should be &quot;true&quot;" time="0.014">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr4) should be &quot;5050&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr5) should be &quot;128&quot;" time="0.006">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr6) should be &quot;547&quot;" time="0.025">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr7) should be &quot;45&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr8) should be &quot;165&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr9) should be &quot;true&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr10) should be &quot;[2; 2; 2; 3; 3; 13]&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr11) should be &quot;55&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr12) should be &quot;3628800&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr13) should be &quot;((Some 1), None)&quot;" time="0.004">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr14) should be &quot;[1; 2; 3; 4; 5; 6; 7; 8]&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr15) should be &quot;[(9, 2); (2, 0)]&quot;" time="0.003">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr16) should be &quot;[(42, 4); (13, 2); (7, 3)]&quot;" time="0.006">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr17) should be &quot;((Some (1, 9)), None)&quot;" time="0.007">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr18) should be &quot;92&quot;" time="0.28">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr19) should be &quot;[(60, [0]); (100, [1]); (160, [0; 1]); (180, [0; 2]); (220, [1; 2])]&quot;" time="0.006">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="eval(expr20) should be &quot;(Some [[5; 7; 8; 2; 3; 4; 6; 1; 9]; [4; 3; 2; 6; 1; 9; 8; 7; 5]; [9;  ..." time="0.18">
                      
                    </testcase><testcase classname="kuplrg.Spec" name="afterAllPass(eval(hanoiMovesExpr(3, 0, 1, 2))) should be &quot;[(0, 2); (0, 1); (2, 1); (0, 2); (1, 0); (1, 2); (0, 2)]&quot;" time="0.005">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>